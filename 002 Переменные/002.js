/*
    Тип данных - number

    Доступны операции по приоритетам :
    1) возведение в степень **
    2) умножение - *, деление - /, получение остатка - %
    3) сложение +,вычитание -

*/

console.log("Пример 1 ================================");
console.log(1+2**3); // 9 (2 в степени 3 = 8 и +1 = 9 , степень всегда в приоритете)
console.log(2*2**3); // 16

console.log("Пример 2 ================================>");
console.log(7%2); // 1 (остаток от деления)
console.log(5+8%3); // 7
console.log(2+2*2); // 6 (умножение приоритетней сложения)

/*
Определение четного/нечетного числа делается через получение остатка от деления на 2
X % 2
*/
console.log("Пример 3 ================================");
var apples = 4;
var bananas = 3;
console.log(apples%2); // 0 (чет)
console.log(bananas%2); // 1 (нечет)

/*
    var x = y = z = 0

    Доступны короткие записи присваивания:
    x += y  аналогично x = x + y
    x -= y  аналогично x = x - y
    x *= y  аналогично x = x * y
    x /= y  аналогично x = x / y

    полный список https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Assignment_Operators
*/

console.log("Пример 4 ================================");
var x = y = z = 0
y += 5;
console.log(x,y,z); // 0 5 0
var myApples = 3;
var yourApples = 2;
myApples += yourApples
console.log(myApples); // 5


/*
    когда нужно прибавить или вычесть 1,
    есть более короткая запись

    x++  возвращает значение x, а потом производтся операция x=x+1
    x--  возвращает значение x,а тотом производтся операция x=x-1
    ++x  сначала производится операция x=x+1, а потом возвращается полученное значение
    --x  сначала производится операция x=x-1, а потом возвращается полученное значение

*/

console.log("Пример 5 ================================");
var fruits = 5;
var bananas = 2;
fruits += --bananas; // 
console.log(fruits); // 6
console.log(bananas); // 1

/*
для работы с числами доступен объект Math
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math

Самые используемые функции объекта:

Math.max(,,,,,,)  - Возвращает наибольшее число из своих аргументов.
Math.min(,,,,,,)  - Возвращает наименьшее число из своих аргументов.

Math.floor(x) - округление до целого в меньшую сторону
Math.round(x) - округление до ближайшего целого

Math.random() - случайное число в диапазоне [0;1) (0 - включает, 1 - не включает)
*/
console.log("Пример 6 ================================");
var apples = Math.min(10,15,2,7,22);
var bananas = Math.max(10,15,2,7,22);
console.log(apples); // 2
console.log(bananas); // 22

var rand1 = Math.random()*10; // [0;10)
var rand2 = Math.floor(rand1); // целое число [0;9]
console.log(rand1); 
console.log(rand2); 

/*
    к числовым значениям также относят
    NaN - (Not-A-Number) не число, возникает, когда математические функции 
          не могут вернуть значение (например, при вызове Math.sqrt(-1))
    Infinity - числовое значение, представляющее бесконечность
*/
console.log("Пример 7 ================================");
console.log(Math.sqrt(-1)); // NaN
console.log(1/0); // Infinity

/*
    нельзя складывать, вычитать и пр. число со строкой (number и string)
    нужно преобразовать строку в число, при помощи Number(str)
*/

console.log("Пример 8 ================================");
var apples = 5;
var bananas = "6";
console.log(apples+bananas); // 56
console.log(apples+Number(bananas)); // 11

/*
    обратите внимание, строка и число в консоли отображаются разным цветом

    Задача по обмену значений переменных для чисел может быть выполнена
    без промежуточной переменной. 
*/
console.log("Пример 9* ================================");
var a = 4;
var b = 5;
a = a + b; 
b = a - b; 
a = a - b;
console.log(a,b) // 5 4


/*
    Задачи на расстановку приоритета.
    Рассмотрим тригонометрические функции.
    002r1.jpg
    В деление имеет больший приоритет,  чтобы  операция сложения
    1+sin(y) сработала раньше, нужно сначала расставить скобки
    002к2.jpg
*/
console.log("Пример 10 ================================");
var y = 1
var x = (1+Math.sin(y))/(1-Math.cos(y));
console.log(x);
